{"version":3,"sources":["services/fetchReddit.js","components/subReddit.js","components/settingsTab.js","data/data.js","assets/icons/project.svg","App.js","serviceWorker.js","index.js"],"names":["fetchReddit","subreddit","fetch","concat","then","response","json","myJson","data","children","subreddits","_this","this","promise","map","getSubreddit","Promise","all","library","add","faImage","faStar","faVideo","Wrapper","styled","div","_templateObject","List","ul","_templateObject2","ListItem","li","_templateObject3","SubReddit","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","updatedSubs","setState","data2","key","isStickied","stickied","isGilded","gilded","react_default","a","createElement","react_fontawesome_index_es","className","icon","isImage","link_flair_text","isVideo","is_video","href","url","target","rel","title","author","moment","created_utc","fromNow","style","marginRight","permalink","num_comments","displayLinks","Component","faCog","faPlus","faCheck","faTimes","SettingsTab","showDrawer","visible","onClose","console","log","handleChange","bind","assertThisInitialized","addInput","saveSubs","e","index","name","value","prevState","objectSpread","push","id","_this2","splice","updateSubs","message","success","zIndex","position","padding","marginBottom","placeholder","onChange","required","type","onClick","deleteInput","_this3","lineHeight","es_button","drawer","placement","closable","width","displayInput","es_form","Item","display","nextProps","prevProps","category_name","label","sub","description","_extends","assign","i","arguments","length","source","prototype","hasOwnProperty","apply","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","project_SvgComponent","version","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","__webpack_require__","p","BodyWrapper","App_templateObject","NavBar","nav","App_templateObject2","Card","App_templateObject3","CardHeader","_templateObject4","SubredditSuggestionsWrapper","_templateObject5","SubredditSuggestions","_templateObject6","SubredditCategory","_templateObject7","SubredditList","_templateObject8","SubredditItem","_templateObject9","SubredditSuggestHeader","_templateObject10","SubredditListWrapper","_templateObject11","SectionWrapper","_templateObject12","SubsWrapper","_templateObject13","App","remove","k","form","keys","getFieldValue","setFieldsValue","filter","nextKeys","handleSubmit","preventDefault","validateFields","err","values","names","localStorage","setItem","JSON","stringify","showInitialSetup","getData","updateSubReddit","subredditsData","parse","getItem","subs","removeItem","_this4","subReddit","list","notification","dangerouslySetInnerHTML","__html","openNotificationWithIcon","_this5","_this$props$form","getFieldDecorator","initialValue","formItems","validateTrigger","rules","whitespace","input","disabled","margin","settingsTab","fontWeight","color","fontSize","onSubmit","htmlType","renderList","right","bottom","height","displaySubs","AppWrapper","Form","create","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c1c1d19.chunk.js","sourcesContent":["export default class fetchReddit {\n\n\tgetSubreddit(subreddit){\n\t\treturn fetch(`https://www.reddit.com/r/${subreddit}.json`)\n\t\t  .then(function(response) {\n\t\t    return response.json();\n\t\t  })\n\t\t  .then(function(myJson) {\n\t\t    return myJson.data.children;\n\t\t  });\n\t}\n\n\tgetData(subreddits){\n\t\tlet promise = subreddits.map(subreddit=>{\n\t\t\treturn this.getSubreddit(subreddit);\n\t\t});\t\n\n\t    return Promise.all(promise).then(data=>{\n\t    \t\treturn data;\n\t    })\n\t}\n}","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage, faStar, faVideo } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components';\n\nlibrary.add(faImage, faStar, faVideo);\n\nconst Wrapper = styled.div`\n  background: #250448;\n  margin-bottom: 2rem;\n  padding: 1rem;\n\n  h2 {\n    color: #f60261\n  }\n\n  @media (min-width: 600px) {\n    padding: 3rem;  \n  }\n\n`\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n`\nconst ListItem = styled.li`\n  list-style: none;\n\n  a {\n    color: white;\n  }\n  small {\n    color: #fdcb01; \n    font-weight: bold\n\n    a {\n      color: #00ebea;\n    }\n  }\n`\n\nclass SubReddit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      updatedSubs: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ updatedSubs: this.props.data2})\n  }\n    \n  displayLinks(data, key) {\n\n    const isStickied = data.data.stickied ? 'stickied' : '';\n    const isGilded = data.data.gilded > 0 ? <FontAwesomeIcon className=\"icon-link icon--star\" icon=\"star\" /> : '';\n    const isImage = data.data.link_flair_text === \"image\" || data.data.link_flair_text === \"Picture\" ? <FontAwesomeIcon className=\"icon-link icon--image\" icon=\"image\" /> : '';\n    const isVideo = data.data.is_video === true ? <FontAwesomeIcon className=\"icon-link icon--video\" icon=\"video\" /> : '';\n\n    return (\n      <ListItem>\n        <a className={`subreddit-topic__link ${isStickied}`} href={data.data.url} target=\"_blank\" rel=\"noopener noreferrer\">{data.data.title}</a>\n        <small> by <a href={`https://reddit.com/u/${data.data.author}`}>{data.data.author}</a> </small>\n        <small>{moment(data.data.created_utc * 1000).fromNow()}</small>\n        <small style={{marginRight: '1rem'}}> <a href={`https://reddit.com${data.data.permalink}`}>{data.data.num_comments} comments</a></small>\n        {isGilded}\n        {isImage}\n        {isVideo}\n      </ListItem>\n    )\n  }\n\n  render() {\n\n    const { data } = this.props;\n\n    if(!this.props.data) {\n      return <div></div>\n    }\n\n    return (\n      <Wrapper className=\"animated fadeIn\">\n        <a className=\"subreddit-title\" href={`https://reddit.com/${data[0].data.permalink}`}>\n          <h2>{data[0].data.subreddit}</h2>\n        </a>\n        <List>\n          {data.map(this.displayLinks)}\n        </List>\n      </Wrapper>\n    );\n  }\n}\n\nexport default SubReddit;\n","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCog, faPlus, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { Button, Drawer, Form, Icon, message } from 'antd';\n\nlibrary.add(faCog, faPlus, faCheck, faTimes);\n\n\nclass SettingsTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.addInput = this.addInput.bind(this);\n    this.saveSubs = this.saveSubs.bind(this);\n\n    this.state = {\n      updatedSubs: [],\n      visible: false\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    console.log('close')\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n\n    this.setState({ updatedSubs: this.props.subreddits});\n  }\n\n  static getDerivedStateFromProps(nextProps, prevProps) {\n\n    return { updatedSubs: nextProps.subreddits }\n  }\n\n  handleChange(e) {\n\n    const index = e.target.name;\n    const value = e.target.value; \n\n    this.setState( prevState => {\n\n      const state = { ...prevState };\n\n      state['updatedSubs'][index] = value;\n\n      return state;\n    })\n  }\n\n  addInput() {\n\n    this.setState( prevState => {\n\n      const state = { ...prevState };\n\n      state['updatedSubs'] = state['updatedSubs'].push('');\n\n      return state;\n    });\n  }\n\n  deleteInput(id) {\n\n    this.setState( prevState => {\n\n      const state = { ...prevState };\n\n      state['updatedSubs'] = state['updatedSubs'].splice(id, 1);\n  \n      this.props.updateSubs(this.state.updatedSubs, 'delete')\n\n      return state;\n    }, ()=>{\n      message.success('Removed');\n    });\n  }\n\n  displayInput(subreddit, key) {\n    return (\n      <div style={{zIndex: 1, position: 'relative'}}>\n          <input className=\"new-sub__input animated fadeIn\" style={{padding: '8px', marginBottom: '1rem', marginRight: '10px'}} name={key} value={subreddit} placeholder=\"subreddit\" onChange={this.handleChange} required/>\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            onClick={this.deleteInput.bind(this, key)}\n          />\n      </div>\n    )\n  }\n\n  saveSubs() {\n    this.setState({ visible: false }, () => {\n      message.success('Updated');\n      this.props.updateSubs(this.state.updatedSubs, 'add');\n    });\n  }\n\n  render() {\n\n\n    return (\n      <div style={{lineHeight: 0}}>\n        <Button className=\"manage-btn\" type=\"primary\" onClick={this.showDrawer}>\n          Manage\n        </Button>\n        <Drawer\n          title=\"Manage Subreddits\"\n          placement=\"right\"\n          closable={true}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          width={'auto'}\n          className=\"drawer\"\n        >\n          {this.state.updatedSubs.map(this.displayInput.bind(this))}\n            <Form.Item style={{display: 'inline-block', marginRight: '1rem', zIndex: 1}}>\n              <Button type=\"dashed\" onClick={this.addInput}>\n                <Icon type=\"plus\" /> Add Subreddit\n              </Button>\n            </Form.Item>\n            <Form.Item style={{display: 'inline-block', zIndex: 1}}>\n              <Button type=\"primary\" onClick={this.saveSubs}>Submit</Button>\n            </Form.Item>          \n        </Drawer>\n      </div>        \n    );      \n  }\n}\n\nexport default SettingsTab;\n","export const subreddits = [\n\t{\n\t\tcategory_name: 'Popular',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Funny', \n\t\t\t\tsub: 'funny',\n\t\t\t\tdescription: 'All stuff funny including videos, pictures and stories shared on the web'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Today I Learned', \n\t\t\t\tsub: 'til',\n\t\t\t\tdescription: 'Read stories of what people have learned today'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Ask Me Anything', \n\t\t\t\tsub: 'iama',\n\t\t\t\tdescription: 'Industry experts invite users to ask questions relating to their skills and expertise'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Shower Thoughts', \n\t\t\t\tsub: 'showerthoughts',\n\t\t\t\tdescription: 'A place for members of the Reddit community to ask each other questions about anything'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Explain Like I\\'m Five', \n\t\t\t\tsub: 'explainlikeimfive',\n\t\t\t\tdescription: 'Questions answered in a simplified way that even a 5 year old can understand'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Food',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Cooking', \n\t\t\t\tsub: 'cooking',\n\t\t\t\tdescription: 'Find recipes and cooking tips'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Ask Culinary', \n\t\t\t\tsub: 'askculinary',\n\t\t\t\tdescription: 'Q&A community about anything cooking related'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Recipes', \n\t\t\t\tsub: 'recipes',\n\t\t\t\tdescription: 'Find and share recipe ideas'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Eat Cheap and Healthy', \n\t\t\t\tsub: 'eatcheapandhealthy',\n\t\t\t\tdescription: 'Learn to make meals that inexpensive and healthy'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'GIF Recipes', \n\t\t\t\tsub: 'gifrecipes',\n\t\t\t\tdescription: 'Users share animated GIF\\'s displaying how to create a dish'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Science',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Ask Science', \n\t\t\t\tsub: 'askscience',\n\t\t\t\tdescription: 'Ask science related questions'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Space', \n\t\t\t\tsub: 'space',\n\t\t\t\tdescription: 'Discussion about space and the universe'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'You Should Know', \n\t\t\t\tsub: 'youshouldknow',\n\t\t\t\tdescription: 'General information about stuff you should know'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Futurology', \n\t\t\t\tsub: 'askreddit',\n\t\t\t\tdescription: 'Discussion about the study of the future'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Life Pro Tips', \n\t\t\t\tsub: 'lifeprotips',\n\t\t\t\tdescription: 'Users share bite-size “pro tips” for life'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Technology',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Apple', \n\t\t\t\tsub: 'apple',\n\t\t\t\tdescription: 'Apple news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Android', \n\t\t\t\tsub: 'android',\n\t\t\t\tdescription: 'Android news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Tech', \n\t\t\t\tsub: 'tech',\n\t\t\t\tdescription: 'Latest and greatest news in tech'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Gadgets', \n\t\t\t\tsub: 'gadgets',\n\t\t\t\tdescription: 'News and stories about the latest gadgets'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Bitcoin', \n\t\t\t\tsub: 'bitcoin',\n\t\t\t\tdescription: 'Bitcoin news and discussion'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'News',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Funny', \n\t\t\t\tsub: 'funny',\n\t\t\t\tdescription: 'All stuff funny including videos, pictures and stories shared on the web'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Entertainment', \n\t\t\t\tsub: 'entertainment',\n\t\t\t\tdescription: 'Celebrity, music and Hollywood talk'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Uplifting News', \n\t\t\t\tsub: 'upliftingnews',\n\t\t\t\tdescription: 'Inspirational and feel-good news'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'World News', \n\t\t\t\tsub: 'worldnews',\n\t\t\t\tdescription: 'Biggest news stories from around the world'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'News', \n\t\t\t\tsub: 'news',\n\t\t\t\tdescription: 'Biggest news stories in the US'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'TV/Film',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Television', \n\t\t\t\tsub: 'television',\n\t\t\t\tdescription: 'TV news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Movies', \n\t\t\t\tsub: 'movies',\n\t\t\t\tdescription: 'Movie news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Game of Thrones', \n\t\t\t\tsub: 'gameofthrones',\n\t\t\t\tdescription: 'Game of Thrones discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Rick and Morty', \n\t\t\t\tsub: 'rickandmorty',\n\t\t\t\tdescription: 'Rick and Morty discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Documentaries', \n\t\t\t\tsub: 'documentaries',\n\t\t\t\tdescription: 'Users share documentaries from around the web'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Video Games',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Gaming', \n\t\t\t\tsub: 'gaming',\n\t\t\t\tdescription: 'General discussion relating to video games'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'League Of Legends', \n\t\t\t\tsub: 'leagueoflegends',\n\t\t\t\tdescription: 'Discussion about popular video game League Of Legends'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Nintendo', \n\t\t\t\tsub: 'nintendo',\n\t\t\t\tdescription: 'Nintendo gaming, news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Playstation 4', \n\t\t\t\tsub: 'ps4',\n\t\t\t\tdescription: 'Playstation 4 gaming, news and discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Xbox One', \n\t\t\t\tsub: 'xboxone',\n\t\t\t\tdescription: 'Discussion of all things Xbox One'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Travel',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'Travel', \n\t\t\t\tsub: 'travel',\n\t\t\t\tdescription: 'Travel news, advice and photos'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Solo Travel', \n\t\t\t\tsub: 'solotravel',\n\t\t\t\tdescription: 'Travel advice and recommendations for the solo traveller'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'ShoeString', \n\t\t\t\tsub: 'shoestring',\n\t\t\t\tdescription: 'Cost saving advice for the budget traveller'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'I Want Out', \n\t\t\t\tsub: 'iwantout',\n\t\t\t\tdescription: 'Discussion for individuals who are thinking of leaving home to live in a foreign country'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Digital Nomad', \n\t\t\t\tsub: 'digitalnomad',\n\t\t\t\tdescription: 'Discussion about working while travelling abroad'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcategory_name: 'Sports',\n\t\tsubreddit: [\n\t\t\t{ \n\t\t\t\tlabel: 'NBA', \n\t\t\t\tsub: 'nba',\n\t\t\t\tdescription: 'NBA related discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'NFL', \n\t\t\t\tsub: 'nfl',\n\t\t\t\tdescription: 'NFL related discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'MLB', \n\t\t\t\tsub: 'mlb',\n\t\t\t\tdescription: 'MLB related discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'NHL', \n\t\t\t\tsub: 'nhl',\n\t\t\t\tdescription: 'NHL related discussion'\n\t\t\t},\n\t\t\t{ \n\t\t\t\tlabel: 'Soccer', \n\t\t\t\tsub: 'soccer',\n\t\t\t\tdescription: 'Soccer related discussion'\n\t\t\t},\n\t\t]\n\t}\n]","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Capa_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      \"enableBackground\": \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#1A2B63\"\n    },\n    cx: 256,\n    cy: 267,\n    r: 245\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M216.796,378.925c12.65,0,24.304,6.362,31.175,17.02c0.169,0.263,0.453,0.432,0.765,0.455 c0.025,0.002,0.051,0.003,0.076,0.003c0.286,0,0.559-0.122,0.749-0.338c10.3-11.651,25.108-18.333,40.627-18.333 c5.288,0,10.396,0.774,15.231,2.193l-17.846-45.745h-63.146l-18.041,46.244C209.691,379.454,213.182,378.925,216.796,378.925z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M232.659,334.179h-8.232l-18.041,46.244c2.808-0.823,5.756-1.306,8.794-1.44L232.659,334.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M197.586,426.192c0.04,0.264,0.183,0.501,0.398,0.659c0.172,0.127,0.38,0.194,0.591,0.194 c0.052,0,0.105-0.004,0.157-0.012c3.57-0.568,7.155-0.856,10.655-0.856c17.099,0,33.41,6.425,45.931,18.091 c0.192,0.179,0.437,0.268,0.682,0.268c0.245,0,0.49-0.089,0.682-0.268c12.52-11.666,28.832-18.091,45.931-18.091 c3.499,0,7.085,0.288,10.655,0.856c0.053,0.008,0.105,0.012,0.157,0.012c0.211,0,0.419-0.067,0.591-0.194 c0.215-0.158,0.358-0.395,0.398-0.659c1.848-12.438,6.529-24.218,13.552-34.499c-9.878-9.272-23.159-14.962-37.778-14.962 c-16.477,0-31.259,7.226-41.376,18.671c-6.776-10.511-18.578-17.478-32.015-17.478c-12.889,0-24.273,6.411-31.162,16.212 C191.765,403.825,195.883,414.727,197.586,426.192z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    d: \"M198.576,426.045c-6.018-40.51-40.935-71.591-83.119-71.591c-29.285,0-55.061,14.984-70.105,37.697 c23.034,38.687,56.425,70.475,96.344,91.571C145.965,454.156,169.144,430.721,198.576,426.045z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M123.849,364.787c21.432,0,41.078,7.602,56.425,20.237c-15.413-18.665-38.719-30.57-64.817-30.57 c-29.285,0-55.061,14.984-70.105,37.697c1.987,3.337,4.057,6.62,6.196,9.852C67.667,379.477,94.036,364.787,123.849,364.787z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    d: \"M396.543,354.454c-42.184,0-77.101,31.082-83.119,71.591c29.432,4.676,52.611,28.111,56.88,57.677 c39.918-21.096,73.31-52.885,96.344-91.571C451.604,369.438,425.828,354.454,396.543,354.454z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M401.627,354.61c-1.682-0.1-3.376-0.156-5.084-0.156c-42.184,0-77.101,31.082-83.119,71.591 c3.136,0.498,6.196,1.222,9.174,2.131C330.96,389.897,362.404,360.256,401.627,354.61z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M302.612,425.177c-18.016,0-34.395,6.976-46.612,18.359c-12.217-11.384-28.596-18.359-46.612-18.359 c-34.435,0-62.92,25.446-67.695,58.558C175.821,501.772,214.713,512,256,512s80.179-10.228,114.307-28.265 C365.532,450.623,337.047,425.177,302.612,425.177z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#1A2B63\"\n    },\n    d: \"M223.686,433.681c9.435,0,18.439,1.835,26.68,5.162c-11.423-8.569-25.6-13.666-40.979-13.666 c-34.435,0-62.92,25.446-67.695,58.558c4.023,2.126,8.114,4.14,12.265,6.044C160.964,457.704,189.508,433.681,223.686,433.681z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M278.528,334.179h-15.119l1.929,15.261c0.519,4.11,4.277,7.017,8.381,6.5 c4.109-0.52,7.02-4.272,6.5-8.381L278.528,334.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M233.472,334.179l-3.966,31.38c-0.519,4.109,2.391,7.862,6.501,8.381 c0.319,0.04,0.636,0.06,0.95,0.06c3.723-0.001,6.953-2.771,7.432-6.561l4.204-33.261h-15.121V334.179z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M179.108,195.717c0-8.155,0.306-16.288,0.878-24.362c-24.06,13.549-40.636,43.733-40.636,78.678 c0,18.456,4.589,36.057,13.27,50.9c0.815,1.394,2.29,2.191,3.822,2.191c0.56,0,1.127-0.106,1.672-0.329 c11.409-4.664,23.601-7.06,36.244-7.16C184.375,264.907,179.108,230.591,179.108,195.717z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M150.689,250.033c0-28.863,11.315-54.467,28.808-70.143c0.134-2.851,0.289-5.697,0.49-8.535 c-24.06,13.549-40.636,43.733-40.636,78.678c0,18.456,4.589,36.057,13.27,50.9c0.815,1.394,2.29,2.191,3.822,2.191 c0.56,0,1.127-0.106,1.672-0.329c1.88-0.769,3.79-1.453,5.711-2.098C155.233,285.903,150.689,268.392,150.689,250.033z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M332.013,171.355c0.572,8.075,0.878,16.208,0.878,24.362c0,34.873-5.267,69.189-15.251,99.918 c12.644,0.1,24.835,2.496,36.244,7.16c0.545,0.223,1.113,0.329,1.672,0.329c1.533,0,3.007-0.798,3.822-2.191 c8.682-14.843,13.27-32.444,13.27-50.9C372.649,215.088,356.073,184.904,332.013,171.355z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M217.708,307.125v23.054c0,2.75,2.25,5,5,5h66.583c2.75,0,5-2.25,5-5v-23.054H217.708z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M234.715,330.179v-23.054h-17.007v23.054c0,2.75,2.25,5,5,5h17.007 C236.965,335.179,234.715,332.929,234.715,330.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EEF6FF\"\n    },\n    d: \"M316.854,90.318H195.145c-11.154,32.153-17.037,68.343-17.037,105.399 c0,38.522,6.389,76.387,18.475,109.5c0.638,1.746,2.298,2.908,4.157,2.908h110.519c1.859,0,3.52-1.162,4.157-2.908 c12.086-33.113,18.475-70.978,18.475-109.5C333.892,158.661,328.009,122.472,316.854,90.318z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M210.756,305.217c-12.087-33.113-18.475-70.978-18.475-109.5c0-37.056,5.883-73.246,17.037-105.399 h-14.172c-11.154,32.153-17.037,68.343-17.037,105.399c0,38.522,6.389,76.387,18.475,109.5c0.638,1.746,2.298,2.908,4.157,2.908 h14.172C213.054,308.125,211.394,306.963,210.756,305.217z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EA2A3D\"\n    },\n    d: \"M227.179,90.318v16.594c0,2.75,2.25,5,5,5h47.642c2.75,0,5-2.25,5-5V90.318H227.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M238.517,106.912V90.318h-11.338v16.594c0,2.75,2.25,5,5,5h11.338 C240.767,111.912,238.517,109.662,238.517,106.912z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M256,0c-0.987,0-1.973,0.329-2.785,0.986c-22.338,18.089-41.154,45.529-54.411,79.354 c-1.41,3.599-2.735,7.269-4.006,10.978h122.403c-1.271-3.709-2.596-7.379-4.006-10.978c-13.257-33.825-32.072-61.265-54.411-79.354 C257.973,0.329,256.987,0,256,0z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M263.086,4.628c-1.419-1.251-2.852-2.468-4.301-3.642C257.973,0.329,256.987,0,256,0 s-1.973,0.329-2.785,0.986c-22.338,18.089-41.154,45.529-54.411,79.354c-1.41,3.599-2.735,7.269-4.006,10.978h14.172 c1.271-3.709,2.596-7.379,4.006-10.978C225.374,48.709,242.632,22.667,263.086,4.628z\"\n  }), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    cx: 256,\n    cy: 180.93,\n    r: 51.02\n  }), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#69CDFF\"\n    },\n    cx: 256,\n    cy: 180.93,\n    r: 32.731\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#52BBEF\"\n    },\n    d: \"M235.268,180.932c0,16.027,11.521,29.355,26.732,32.174c-1.946,0.36-3.949,0.558-6,0.558 c-18.078,0-32.731-14.655-32.731-32.732s14.654-32.731,32.731-32.731c2.05,0,4.054,0.198,6,0.558 C246.789,151.578,235.268,164.905,235.268,180.932z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFD00D\"\n    },\n    d: \"M110.136,178.737c-1.147,0-2.181-0.691-2.62-1.751c-5.583-13.479-9.699-17.594-23.178-23.177 c-1.06-0.439-1.75-1.473-1.75-2.62c0-1.147,0.691-2.181,1.75-2.62c13.48-5.585,17.595-9.701,23.178-23.179 c0.439-1.06,1.473-1.751,2.62-1.751s2.181,0.691,2.62,1.751c5.584,13.478,9.7,17.594,23.179,23.179 c1.06,0.439,1.751,1.473,1.751,2.62c0,1.147-0.691,2.182-1.751,2.62c-13.479,5.582-17.595,9.698-23.179,23.177 C112.317,178.046,111.283,178.737,110.136,178.737L110.136,178.737z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFAF10\"\n    },\n    d: \"M113.185,171.317c-5.583-13.479-9.699-17.594-23.178-23.177c-0.666-0.275-1.185-0.787-1.48-1.413 c-1.294,0.606-2.674,1.214-4.189,1.842c-1.06,0.439-1.75,1.473-1.75,2.62c0,1.147,0.691,2.182,1.75,2.62 c13.479,5.583,17.595,9.698,23.178,23.177c0.439,1.06,1.473,1.751,2.62,1.751s2.181-0.691,2.62-1.751 c0.627-1.515,1.236-2.895,1.841-4.188C113.972,172.503,113.461,171.983,113.185,171.317z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFFFFF\"\n    },\n    d: \"M411.469,201.404c-1.008,0-1.917-0.607-2.303-1.539c-4.907-11.848-8.525-15.465-20.373-20.372 c-0.931-0.385-1.539-1.295-1.539-2.303c0-1.009,0.607-1.917,1.539-2.303c11.849-4.909,15.466-8.527,20.373-20.374 c0.386-0.932,1.295-1.539,2.303-1.539s1.917,0.607,2.303,1.539c4.908,11.848,8.526,15.465,20.375,20.374 c0.931,0.386,1.538,1.294,1.538,2.303c0,1.008-0.607,1.917-1.539,2.303c-11.848,4.907-15.466,8.524-20.374,20.372 C413.387,200.796,412.478,201.404,411.469,201.404L411.469,201.404z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M414.149,194.882c-4.908-11.848-8.525-15.465-20.374-20.373c-0.585-0.242-1.042-0.691-1.301-1.242 c-1.137,0.532-2.351,1.067-3.682,1.619c-0.931,0.386-1.539,1.294-1.539,2.303c0,1.008,0.607,1.917,1.539,2.303 c11.849,4.907,15.466,8.524,20.373,20.372c0.386,0.932,1.295,1.539,2.303,1.539s1.917-0.607,2.303-1.539 c0.551-1.331,1.086-2.545,1.619-3.682C414.841,195.924,414.392,195.467,414.149,194.882z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FF9518\"\n    },\n    d: \"M385.469,96.071c-1.175,0-2.234-0.708-2.684-1.793c-5.718-13.806-9.933-18.021-23.739-23.738 c-1.085-0.449-1.792-1.509-1.792-2.683c0-1.176,0.708-2.234,1.792-2.684c13.807-5.72,18.022-9.935,23.739-23.739 c0.45-1.086,1.509-1.794,2.684-1.794s2.234,0.708,2.684,1.794c5.719,13.805,9.934,18.02,23.74,23.739 c1.085,0.45,1.792,1.508,1.792,2.684c0,1.174-0.708,2.234-1.793,2.683c-13.806,5.717-18.02,9.933-23.74,23.738 C387.703,95.363,386.644,96.071,385.469,96.071L385.469,96.071z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EF8318\"\n    },\n    d: \"M388.592,88.472c-5.719-13.805-9.934-18.02-23.74-23.738c-0.682-0.282-1.213-0.806-1.516-1.447 c-1.324,0.621-2.739,1.244-4.291,1.886c-1.085,0.45-1.792,1.508-1.792,2.684c0,1.174,0.708,2.234,1.792,2.683 c13.806,5.718,18.022,9.933,23.739,23.738c0.45,1.085,1.509,1.793,2.684,1.793s2.234-0.708,2.684-1.793 c0.643-1.552,1.266-2.966,1.886-4.29C389.397,89.686,388.874,89.154,388.592,88.472z\"\n  }), _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15);\n};\n\nexport default __webpack_public_path__ + \"static/media/project.9bda81de.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from 'react';\nimport fetchReddit from './services/fetchReddit';\nimport SubReddit from './components/subReddit';\nimport SettingsTab from './components/settingsTab';\n// import { Button } from './assets/styled-components/button';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components';\nimport { subreddits } from './data/data';\nimport { ReactComponent as RocketSVG } from './assets/icons/project.svg';\n// import { ReactComponent as StarsSVG } from './assets/icons/falling-star.svg';\n\nimport {\n  Form, Input, Icon, Button, notification\n} from 'antd';\n\nlet id = 1;\n\nlibrary.add(faTimes);\n\nconst BodyWrapper = styled.div`\n  padding: 1rem;\n  overflow: hidden;\n  \n  @media (min-width: 500px) {\n    padding: 2rem 4rem;  \n  }\n`\n\nconst NavBar = styled.nav`\n  color: white;\n  font-size: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; \n` \nconst Card = styled.div`\n  \n  position: relative;\n  background: #f60261;\n  border-radius: 5px;\n  box-shadow: 0 1px 7px 1px rgba(0,0,0,.4);\n  margin-bottom: 3rem;\n  flex-basis: 45%;\n\n  @media (min-width: 500px) {\n    margin-bottom: 0;\n  }  \n`\nconst CardHeader = styled.div`\n  background: #250448 none repeat scroll 0% 0%;\n  padding: 1.5rem 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px 0px rgba(0,0,0,.5);\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n\n  svg {\n    height: 50px; \n    position: absolute;\n    right: -49px;\n    transform: rotate(-111deg); \n    top: 11px;\n\n    @media (min-width: 500px) {\n      right: 36px;\n    }    \n  }\n`\nconst SubredditSuggestionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 45%;\n`\nconst SubredditSuggestions = styled.div`\n  flex-grow: 1;\n  flex-basis: 33%;\n  padding: 0.5rem 0;\n`\nconst SubredditCategory = styled.p`\n  color: #f60261;\n  font-weight: bold;\n  margin: 0;\n`\nconst SubredditList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;  \n`\nconst SubredditItem = styled.li`\n  :hover {\n    color: #111;\n    cursor: pointer;\n  }\n`\nconst SubredditSuggestHeader = styled.p`\n  display: block;\n  width: 100%;\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 2rem;\n`\nconst SubredditListWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-self: flex-start;\n`\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  margin: 0 auto;\n  box-shadow: 0 1px 2px 0 rgba(0,0,0,.1);\n  padding: 1rem;\n  background: white;\n  border-radius: 5px;\n  justify-content: space-between;\n  \n  @media (min-width: 900px) {\n    flex-direction: row;\n    padding: 4rem;\n    border: 27px solid #250448;\n      width: 1200px;\n  }  \n`\nconst SubsWrapper = styled.div`\n\n`\n\nconst openNotificationWithIcon = (type, label, sub, description) => {\n  notification[type]({\n    message: `${label}`,\n    description: <div dangerouslySetInnerHTML={{__html: `<p>${description}</p><a target=\"_blank\" href='https://reddit.com/r/${sub}'>Preview</a>`}} />\n  });\n};\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.addSubReddit = this.addSubReddit.bind(this);\n    this.updateSubReddit = this.updateSubReddit.bind(this);\n\n    this.state = {\n      subreddits: [],\n      subredditsData: [],\n      showInitialSetup: true\n    }\n  }\n\n  componentDidMount() {\n\n    // if there is already saved data in local storage, bypass initial screen\n    // if local storage is empty or not items set then show initial screen\n    if(JSON.parse(localStorage.getItem(\"subreddits\")) !== null) {\n\n      this.setState({ showInitialSetup: false }, ()=>this.getData());\n\n    };\n  }\n\n  remove = (k) => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  }\n\n  add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    console.log(keys)\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { names } = values;\n        localStorage.setItem(\"subreddits\", JSON.stringify(names));\n        this.setState({ \n          subreddits: names,\n          showInitialSetup: false\n        }, ()=> { \n          this.getData(this.state.subreddits)\n          }\n        );\n      }\n    });\n  }\n\n\n\n\n\n  async getData() {\n\n    const subs = JSON.parse(localStorage.getItem(\"subreddits\"));\n    const fetch = new fetchReddit();\n    const data = await fetch.getData(subs);\n\n    this.setState({ subredditsData: data });\n  }\n\n  updateSubReddit(subreddits, type) {\n    \n    // if local storage is empty, show initial screen & reset state\n    if(type === 'delete' && subreddits.length === 0) {\n        \n      localStorage.removeItem(\"subreddits\");\n      this.props.form.setFieldsValue({\n        keys: [0],\n      });\n      this.setState({ \n        showInitialSetup: true, \n        subreddits: [] \n      });\n    \n    return;\n    \n    } \n\n    // if local storage has data then update local storage and fetch data\n    localStorage.setItem(\"subreddits\", JSON.stringify(subreddits));\n\n    this.setState({ \n      showInitialSetup: false \n    }, () => {\n      this.getData(JSON.parse(localStorage.getItem(\"subreddits\")));\n    });\n  }\n\n  handleChange(e) {\n\n    const index = e.target.name;\n    const value = e.target.value;\n\n    this.setState( prevState => {\n      \n      const state = { ...prevState };\n\n      state['subreddits'][index] = value;\n\n      return state;\n    })\n  }\n\n  displaySubs() {\n    return JSON.parse(localStorage.getItem(\"subreddits\")).map((subreddit, key)=>{\n      return <SubReddit \n                key={key} \n                id={key}\n                data={this.state.subredditsData[key]} \n                data2={JSON.parse(localStorage.getItem(\"subreddits\"))}\n            />\n    })    \n  }\n\n  renderList(list) {\n    return (\n      <SubredditSuggestions>\n        <SubredditCategory>{list.category_name}</SubredditCategory>\n        <SubredditList>\n          {list.subreddit.map((sub, index) => {\n            return (\n              <SubredditItem key={`${sub}${index}`} onClick={() => openNotificationWithIcon('info', sub.label, sub.sub, sub.description)}>{sub.sub}</SubredditItem>\n            )\n          })}   \n        </SubredditList>\n      </SubredditSuggestions>\n    )\n  }\n\n  render() {\n\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n\n    getFieldDecorator('keys', {initialValue: [0]});\n    const keys = getFieldValue('keys');\n    console.log(keys)\n    const formItems = keys.map((k, index) => (\n      <Form.Item\n        required={false}\n        key={k}\n      >\n        {getFieldDecorator(`names[${k}]`, {\n          validateTrigger: ['onChange', 'onBlur'],\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: \"Required\",\n          }],\n        })(\n          <Input placeholder=\"e.g: showerthoughts\" style={{ width: '75%', marginRight: 8 }} />\n        )}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n            style={{fill: '#fdcb01'}}\n          />\n        ) : null}\n      </Form.Item>\n    ));\n\n    return (\n      <BodyWrapper>\n\n        <NavBar>\n          <p style={{margin: 0}}>reddit</p>\n       \n          {!this.state.showInitialSetup \n            ?           \n            <SettingsTab  \n              subreddits={JSON.parse(localStorage.getItem(\"subreddits\"))} \n              updateSubs={this.updateSubReddit}\n              form={this.props.form}\n          /> : \"\"\n        }\n        </NavBar>\n\n        {this.state.showInitialSetup \n          ? \n        <div className=\"animated fadeIn\">\n          <SectionWrapper style={{position: 'relative'}}>\n            <Card>\n              <CardHeader>\n                <p className= \"x\" style={{fontWeight: 'bold', color: 'white', fontSize: '1.5rem', marginBottom: 0}}>Lets Get Started</p>\n                <p style={{color: '#ccc', margin: 0, padding: 0, fontSize: 12}}>Start adding some of your favourite subreddits</p>\n              </CardHeader>\n                  <Form onSubmit={this.handleSubmit}>\n                    {formItems}\n                    <Form.Item style={{display: 'inline-block', marginRight: '1rem'}}>\n                      <Button type=\"dashed\" onClick={this.add}>\n                        <Icon type=\"plus\" /> Add Subreddit\n                      </Button>\n                    </Form.Item>\n                    <Form.Item style={{display: 'inline-block'}}>\n                      <Button htmlType=\"submit\">Submit</Button>\n                    </Form.Item>\n                  </Form>\n            </Card>\n            <SubredditSuggestionsWrapper>\n                <SubredditSuggestHeader>New to <a href=\"https://reddit.com\">Reddit</a>? Explore some of the popular subreddits</SubredditSuggestHeader>\n                <SubredditListWrapper>\n                  {subreddits.map((list)=>this.renderList(list))}\n                </SubredditListWrapper>\n            </SubredditSuggestionsWrapper>\n            <RocketSVG style={{position: 'absolute', right: -100, bottom: -50, height: 200, width: 'auto'}}/>    \n          </SectionWrapper>\n        </div>\n          : \n        <div className=\"App\">\n          <SubsWrapper>\n            {this.displaySubs()}\n          </SubsWrapper>\n        </div>\n        }\n      </BodyWrapper>\n    )\n  }\n}\n\nconst AppWrapper = Form.create({ name: 'app' })(App);\n\nexport default AppWrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}