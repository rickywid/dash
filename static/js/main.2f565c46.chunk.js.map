{"version":3,"sources":["components/subReddit.js","components/settingsTab.js","data/data.js","assets/icons/project.svg","services/fetchReddit.js","assets/icons/upload.svg","App.js","serviceWorker.js","index.js"],"names":["library","add","faImage","faStar","faVideo","Wrapper","styled","div","_templateObject","List","ul","_templateObject2","ListItem","li","_templateObject3","SubReddit","displayLinks","data","key","isStickied","stickied","isGilded","gilded","react_default","a","createElement","react_fontawesome_index_es","className","icon","isImage","link_flair_text","isVideo","is_video","concat","href","url","target","rel","title","author","moment","created_utc","fromNow","style","marginRight","permalink","num_comments","_this$props","this","props","id","subreddit","map","Component","defaultProps","faCog","faPlus","faCheck","faTimes","ManageButton","Button","settingsTab_templateObject","SettingsTab","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClose","setState","visible","showDrawer","handleChange","bind","assertThisInitialized","addInput","saveSubs","state","updatedSubs","subreddits","e","_e$target","name","value","prevState","objectSpread","push","updateSubs","splice","message","success","_this2","zIndex","position","padding","marginBottom","width","placeholder","onChange","required","type","onClick","deleteInput","_this$state","menu","es_menu","sub","i","Item","lineHeight","dropdown","overlay","es_button","drawer","placement","closable","displayInput","es_form","display","nextProps","defaultData","category_name","label","description","_extends","assign","arguments","length","source","prototype","hasOwnProperty","apply","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","project_SvgComponent","version","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","FetchReddit","__webpack_require__","p","fetch","then","response","json","myJson","children","catch","err","subs","JSON","parse","localStorage","getItem","indexOf","setItem","stringify","promise","getSubreddit","Promise","all","upload_extends","upload_ref","upload_ref2","upload_ref3","upload_ref4","upload_ref5","upload_ref6","upload_ref7","upload_ref8","upload_ref9","upload_ref10","upload_ref11","upload_ref12","upload_ref13","upload_ref14","upload_ref15","BodyWrapper","App_templateObject","NavBar","nav","App_templateObject2","Card","App_templateObject3","CardHeader","_templateObject4","SubredditSuggestionsWrapper","_templateObject5","SubredditSuggestions","_templateObject6","SubredditCategory","_templateObject7","SubredditList","_templateObject8","SubredditItem","_templateObject9","SubredditSuggestHeader","_templateObject10","SubredditListWrapper","_templateObject11","SectionWrapper","_templateObject12","SubsWrapper","_templateObject13","BottomWrapper","_templateObject14","UploadIconStyle","_templateObject15","Main","_templateObject16","openNotificationWithIcon","notification","dangerouslySetInnerHTML","__html","App","componentDidMount","showInitialSetup","getData","remove","k","form","keys","getFieldValue","setFieldsValue","filter","nextKeys","handleSubmit","validateFields","preventDefault","values","names","validateSubs","validSubs","undefined","invalidSubreddits","updateSubReddit","removeItem","_e$target$value","index","displaySubs","subredditsData","subReddit","data2","renderList","list","Math","random","generateColor","color","floor","render","_this$props$form","getFieldDecorator","initialValue","formItems","validateTrigger","rules","whitespace","input","disabled","margin","settingsTab","fontWeight","fontSize","onSubmit","htmlType","right","bottom","height","sidebarIsOpen","error","AppWrapper","Form","create","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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D,MAAO,QACPhB,IAAK,QACLiB,YAAa,2CAEf,CACED,MAAO,kBACPhB,IAAK,gBACLiB,YAAa,mDAEf,CACED,MAAO,aACPhB,IAAK,YACLiB,YAAa,4CAEf,CACED,MAAO,gBACPhB,IAAK,cACLiB,YAAa,yDAInB,CACEF,cAAe,aACfvE,UAAW,CACT,CACEwE,MAAO,QACPhB,IAAK,QACLiB,YAAa,6BAEf,CACED,MAAO,UACPhB,IAAK,UACLiB,YAAa,+BAEf,CACED,MAAO,OACPhB,IAAK,OACLiB,YAAa,oCAEf,CACED,MAAO,UACPhB,IAAK,UACLiB,YAAa,6CAEf,CACED,MAAO,UACPhB,IAAK,UACLiB,YAAa,iCAInB,CACEF,cAAe,OACfvE,UAAW,CACT,CACEwE,MAAO,QACPhB,IAAK,QACLiB,YAAa,4EAEf,CACED,MAAO,gBACPhB,IAAK,gBACLiB,YAAa,uCAEf,CACED,MAAO,iBACPhB,IAAK,gBACLiB,YAAa,oCAEf,CACED,MAAO,aACPhB,IAAK,YACLiB,YAAa,8CAEf,CACED,MAAO,OACPhB,IAAK,OACLiB,YAAa,oCAInB,CACEF,cAAe,UACfvE,UAAW,CACT,CACEwE,MAAO,aACPhB,IAAK,aACLiB,YAAa,0BAEf,CACED,MAAO,SACPhB,IAAK,SACLiB,YAAa,6BAEf,CACED,MAAO,kBACPhB,IAAK,gBACLiB,YAAa,8BAEf,CACED,MAAO,iBACPhB,IAAK,eACLiB,YAAa,6BAEf,CACED,MAAO,gBACPhB,IAAK,gBACLiB,YAAa,mDAInB,CACEF,cAAe,cACfvE,UAAW,CACT,CACEwE,MAAO,SACPhB,IAAK,SACLiB,YAAa,8CAEf,CACED,MAAO,oBACPhB,IAAK,kBACLiB,YAAa,yDAEf,CACED,MAAO,WACPhB,IAAK,WACLiB,YAAa,wCAEf,CACED,MAAO,gBACPhB,IAAK,MACLiB,YAAa,6CAEf,CACED,MAAO,WACPhB,IAAK,UACLiB,YAAa,uCAInB,CACEF,cAAe,SACfvE,UAAW,CACT,CACEwE,MAAO,SACPhB,IAAK,SACLiB,YAAa,kCAEf,CACED,MAAO,cAC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","file":"static/js/main.2f565c46.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faStar, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nlibrary.add(faImage, faStar, faVideo);\n\nconst Wrapper = styled.div`\n  margin-bottom: 2rem;\n  padding: 1rem 0;\n\n  h2 {\n    color: #f60261;\n    display: inline-block;\n    font-weight: bold;\n    transition: color .2s;\n\n    &:hover {\n      color: #f602616e;\n    }\n  }\n\n  @media (min-width: 600px) {\n    padding: 3rem 0;\n  }\n\n`;\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\nconst ListItem = styled.li`\n  list-style: none;\n  margin-bottom: 0.3rem;\n\n  a {\n    color: white;\n\n    &:hover {\n      color: yellow;\n    }\n  }\n  small {\n    color: #fdcb01; \n    font-weight: bold\n\n    a {\n      color: #00ebea;\n    }\n  }\n`;\n\nclass SubReddit extends Component {\n  displayLinks = (data, key) => {\n    const isStickied = data.data.stickied ? 'stickied' : '';\n    const isGilded = data.data.gilded > 0 ? <FontAwesomeIcon className=\"icon-link icon--star\" icon=\"star\" /> : '';\n    const isImage = data.data.link_flair_text === 'image' || data.data.link_flair_text === 'Picture' ? <FontAwesomeIcon className=\"icon-link icon--image\" icon=\"image\" /> : '';\n    const isVideo = data.data.is_video === true ? <FontAwesomeIcon className=\"icon-link icon--video\" icon=\"video\" /> : '';\n\n    return (\n      <ListItem key={key}>\n        <a className={`subreddit-topic__link ${isStickied}`} href={data.data.url} target=\"_blank\" rel=\"noopener noreferrer\">{data.data.title}</a>\n        &nbsp;\n        <small>\n          by\n          <a href={`https://reddit.com/u/${data.data.author}`}>\n            &nbsp;\n            {data.data.author}\n          </a>\n        </small>\n        &nbsp;\n        <small>{moment(data.data.created_utc * 1000).fromNow()}</small>\n        &nbsp;\n        <small style={{ marginRight: '1rem' }}>\n          <a href={`https://reddit.com${data.data.permalink}`}>\n            {data.data.num_comments}\n            &nbsp;\n            comments\n          </a>\n        </small>\n        {isGilded}\n        {isImage}\n        {isVideo}\n      </ListItem>\n    );\n  }\n\n  render() {\n    const { data, id } = this.props;\n\n    if (!data) {\n      return <div />;\n    }\n\n    return (\n      <Wrapper id={id} className=\"animated fadeIn\">\n        <a className=\"subreddit-title\" href={`https://reddit.com/r/${data[0].data.subreddit}`}>\n          <h2>{data[0].data.subreddit}</h2>\n        </a>\n        <List>\n          {data.map(this.displayLinks)}\n        </List>\n      </Wrapper>\n    );\n  }\n}\n\nSubReddit.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.shape({\n      data: PropTypes.shape(\n        {\n          subreddit: PropTypes.string,\n        },\n      ),\n    })])),\n  id: PropTypes.string.isRequired,\n};\n\nSubReddit.defaultProps = {\n  data: null,\n};\n\nexport default SubReddit;\n","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faCog,\n  faPlus,\n  faCheck,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Drawer,\n  Form,\n  Icon,\n  message,\n  Dropdown,\n  Menu,\n} from 'antd';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nlibrary.add(faCog, faPlus, faCheck, faTimes);\n\nconst ManageButton = styled(Button)`\n  margin-right: 20px;\n`;\n\nclass SettingsTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.addInput = this.addInput.bind(this);\n    this.saveSubs = this.saveSubs.bind(this);\n\n    this.state = {\n      updatedSubs: [],\n      visible: false,\n    };\n  }\n\n  componentDidMount() {\n    const { subreddits } = this.props;\n    this.setState({ updatedSubs: subreddits });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    return { updatedSubs: nextProps.subreddits };\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState((prevState) => {\n      const state = { ...prevState };\n\n      state.updatedSubs[name] = value;\n\n      return state;\n    });\n  }\n\n  addInput() {\n    this.setState((prevState) => {\n      const state = { ...prevState };\n\n      state.updatedSubs = state.updatedSubs.push('');\n\n      return state;\n    });\n  }\n\n  deleteInput(id) {\n    const { updateSubs } = this.props;\n    this.setState((prevState) => {\n      const state = { ...prevState };\n      state.updatedSubs.splice(id, 1);\n      updateSubs(state.updatedSubs, 'delete');\n\n      return state;\n    }, () => {\n      message.success('Removed');\n    });\n  }\n\n  displayInput(subreddit, key) {\n    return (\n      <div key={key} style={{ zIndex: 1, position: 'relative' }}>\n        <input className=\"new-sub__input animated fadeIn\" style={{ padding: '8px', marginBottom: '1rem', marginRight: '10px', width: '85%' }} name={key} value={subreddit} placeholder=\"subreddit\" onChange={this.handleChange} required />\n        <Icon\n          className=\"dynamic-delete-button\"\n          type=\"minus-circle-o\"\n          onClick={() => this.deleteInput(key)}\n        />\n      </div>\n    );\n  }\n\n  saveSubs() {\n    const { updatedSubs } = this.state;\n    const { updateSubs } = this.props;\n    this.setState({ visible: false }, () => {\n      message.success('Updated');\n      updateSubs(updatedSubs, 'add');\n    });\n  }\n\n  render() {\n    const { visible, updatedSubs } = this.state;\n\n    const menu = (\n      <Menu>\n        {\n        updatedSubs.map((sub, i) => (\n          <Menu.Item key={i}>\n            <a href={`#${sub}`}>{sub}</a>\n          </Menu.Item>\n        ))\n        }\n      </Menu>\n    );\n\n    return (\n      <div style={{ lineHeight: 0 }}>\n        <ManageButton className=\"manage-btn\" type=\"primary\" onClick={this.showDrawer}>\n          Manage\n        </ManageButton>\n        <Dropdown overlay={menu}>\n          <Button type=\"primary\">\n            My List\n            <Icon type=\"down\" />\n          </Button>\n        </Dropdown>\n        <Drawer\n          title=\"Manage Subreddits\"\n          placement=\"right\"\n          closable\n          onClose={this.onClose}\n          visible={visible}\n          width=\"auto\"\n          className=\"drawer\"\n        >\n          {updatedSubs.map(this.displayInput.bind(this))}\n          <Form.Item style={{ display: 'inline-block', marginRight: '1rem', zIndex: 1 }}>\n            <Button type=\"dashed\" onClick={this.addInput}>\n              <Icon type=\"plus\" />\n              Add Subreddit\n            </Button>\n          </Form.Item>\n          <Form.Item style={{ display: 'inline-block', zIndex: 1 }}>\n            <Button type=\"primary\" onClick={this.saveSubs}>Submit</Button>\n          </Form.Item>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nSettingsTab.propTypes = {\n  subreddits: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n    .isRequired,\n  updateSubs: PropTypes.func.isRequired,\n};\n\nexport default SettingsTab;\n","const defaultData = [\n  {\n    category_name: 'Popular',\n    subreddit: [\n      {\n        label: 'Funny',\n        sub: 'funny',\n        description: 'All stuff funny including videos, pictures and stories shared on the web',\n      },\n      {\n        label: 'Today I Learned',\n        sub: 'todayilearned',\n        description: 'Read stories of what people have learned today',\n      },\n      {\n        label: 'Ask Me Anything',\n        sub: 'iama',\n        description: 'Industry experts invite users to ask questions relating to their skills and expertise',\n      },\n      {\n        label: 'Shower Thoughts',\n        sub: 'showerthoughts',\n        description: 'A place for members of the Reddit community to ask each other questions about anything',\n      },\n      {\n        label: 'Explain Like I\\'m Five',\n        sub: 'explainlikeimfive',\n        description: 'Questions answered in a simplified way that even a 5 year old can understand',\n      },\n    ],\n  },\n  {\n    category_name: 'Food',\n    subreddit: [\n      {\n        label: 'Cooking',\n        sub: 'cooking',\n        description: 'Find recipes and cooking tips',\n      },\n      {\n        label: 'Ask Culinary',\n        sub: 'askculinary',\n        description: 'Q&A community about anything cooking related',\n      },\n      {\n        label: 'Recipes',\n        sub: 'recipes',\n        description: 'Find and share recipe ideas',\n      },\n      {\n        label: 'Eat Cheap and Healthy',\n        sub: 'eatcheapandhealthy',\n        description: 'Learn to make meals that inexpensive and healthy',\n      },\n      {\n        label: 'GIF Recipes',\n        sub: 'gifrecipes',\n        description: 'Users share animated GIF\\'s displaying how to create a dish',\n      },\n    ],\n  },\n  {\n    category_name: 'Science',\n    subreddit: [\n      {\n        label: 'Ask Science',\n        sub: 'askscience',\n        description: 'Ask science related questions',\n      },\n      {\n        label: 'Space',\n        sub: 'space',\n        description: 'Discussion about space and the universe',\n      },\n      {\n        label: 'You Should Know',\n        sub: 'youshouldknow',\n        description: 'General information about stuff you should know',\n      },\n      {\n        label: 'Futurology',\n        sub: 'askreddit',\n        description: 'Discussion about the study of the future',\n      },\n      {\n        label: 'Life Pro Tips',\n        sub: 'lifeprotips',\n        description: 'Users share bite-size “pro tips” for life',\n      },\n    ],\n  },\n  {\n    category_name: 'Technology',\n    subreddit: [\n      {\n        label: 'Apple',\n        sub: 'apple',\n        description: 'Apple news and discussion',\n      },\n      {\n        label: 'Android',\n        sub: 'android',\n        description: 'Android news and discussion',\n      },\n      {\n        label: 'Tech',\n        sub: 'tech',\n        description: 'Latest and greatest news in tech',\n      },\n      {\n        label: 'Gadgets',\n        sub: 'gadgets',\n        description: 'News and stories about the latest gadgets',\n      },\n      {\n        label: 'Bitcoin',\n        sub: 'bitcoin',\n        description: 'Bitcoin news and discussion',\n      },\n    ],\n  },\n  {\n    category_name: 'News',\n    subreddit: [\n      {\n        label: 'Funny',\n        sub: 'funny',\n        description: 'All stuff funny including videos, pictures and stories shared on the web',\n      },\n      {\n        label: 'Entertainment',\n        sub: 'entertainment',\n        description: 'Celebrity, music and Hollywood talk',\n      },\n      {\n        label: 'Uplifting News',\n        sub: 'upliftingnews',\n        description: 'Inspirational and feel-good news',\n      },\n      {\n        label: 'World News',\n        sub: 'worldnews',\n        description: 'Biggest news stories from around the world',\n      },\n      {\n        label: 'News',\n        sub: 'news',\n        description: 'Biggest news stories in the US',\n      },\n    ],\n  },\n  {\n    category_name: 'TV/Film',\n    subreddit: [\n      {\n        label: 'Television',\n        sub: 'television',\n        description: 'TV news and discussion',\n      },\n      {\n        label: 'Movies',\n        sub: 'movies',\n        description: 'Movie news and discussion',\n      },\n      {\n        label: 'Game of Thrones',\n        sub: 'gameofthrones',\n        description: 'Game of Thrones discussion',\n      },\n      {\n        label: 'Rick and Morty',\n        sub: 'rickandmorty',\n        description: 'Rick and Morty discussion',\n      },\n      {\n        label: 'Documentaries',\n        sub: 'documentaries',\n        description: 'Users share documentaries from around the web',\n      },\n    ],\n  },\n  {\n    category_name: 'Video Games',\n    subreddit: [\n      {\n        label: 'Gaming',\n        sub: 'gaming',\n        description: 'General discussion relating to video games',\n      },\n      {\n        label: 'League Of Legends',\n        sub: 'leagueoflegends',\n        description: 'Discussion about popular video game League Of Legends',\n      },\n      {\n        label: 'Nintendo',\n        sub: 'nintendo',\n        description: 'Nintendo gaming, news and discussion',\n      },\n      {\n        label: 'Playstation 4',\n        sub: 'ps4',\n        description: 'Playstation 4 gaming, news and discussion',\n      },\n      {\n        label: 'Xbox One',\n        sub: 'xboxone',\n        description: 'Discussion of all things Xbox One',\n      },\n    ],\n  },\n  {\n    category_name: 'Travel',\n    subreddit: [\n      {\n        label: 'Travel',\n        sub: 'travel',\n        description: 'Travel news, advice and photos',\n      },\n      {\n        label: 'Solo Travel',\n        sub: 'solotravel',\n        description: 'Travel advice and recommendations for the solo traveller',\n      },\n      {\n        label: 'ShoeString',\n        sub: 'shoestring',\n        description: 'Cost saving advice for the budget traveller',\n      },\n      {\n        label: 'I Want Out',\n        sub: 'iwantout',\n        description: 'Discussion for individuals who are thinking of leaving home to live in a foreign country',\n      },\n      {\n        label: 'Digital Nomad',\n        sub: 'digitalnomad',\n        description: 'Discussion about working while travelling abroad',\n      },\n    ],\n  },\n  {\n    category_name: 'Sports',\n    subreddit: [\n      {\n        label: 'NBA',\n        sub: 'nba',\n        description: 'NBA related discussion',\n      },\n      {\n        label: 'NFL',\n        sub: 'nfl',\n        description: 'NFL related discussion',\n      },\n      {\n        label: 'MLB',\n        sub: 'mlb',\n        description: 'MLB related discussion',\n      },\n      {\n        label: 'NHL',\n        sub: 'nhl',\n        description: 'NHL related discussion',\n      },\n      {\n        label: 'Soccer',\n        sub: 'soccer',\n        description: 'Soccer related discussion',\n      },\n    ],\n  },\n];\n\nexport default defaultData;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Capa_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      \"enableBackground\": \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#1A2B63\"\n    },\n    cx: 256,\n    cy: 267,\n    r: 245\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M216.796,378.925c12.65,0,24.304,6.362,31.175,17.02c0.169,0.263,0.453,0.432,0.765,0.455 c0.025,0.002,0.051,0.003,0.076,0.003c0.286,0,0.559-0.122,0.749-0.338c10.3-11.651,25.108-18.333,40.627-18.333 c5.288,0,10.396,0.774,15.231,2.193l-17.846-45.745h-63.146l-18.041,46.244C209.691,379.454,213.182,378.925,216.796,378.925z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M232.659,334.179h-8.232l-18.041,46.244c2.808-0.823,5.756-1.306,8.794-1.44L232.659,334.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M197.586,426.192c0.04,0.264,0.183,0.501,0.398,0.659c0.172,0.127,0.38,0.194,0.591,0.194 c0.052,0,0.105-0.004,0.157-0.012c3.57-0.568,7.155-0.856,10.655-0.856c17.099,0,33.41,6.425,45.931,18.091 c0.192,0.179,0.437,0.268,0.682,0.268c0.245,0,0.49-0.089,0.682-0.268c12.52-11.666,28.832-18.091,45.931-18.091 c3.499,0,7.085,0.288,10.655,0.856c0.053,0.008,0.105,0.012,0.157,0.012c0.211,0,0.419-0.067,0.591-0.194 c0.215-0.158,0.358-0.395,0.398-0.659c1.848-12.438,6.529-24.218,13.552-34.499c-9.878-9.272-23.159-14.962-37.778-14.962 c-16.477,0-31.259,7.226-41.376,18.671c-6.776-10.511-18.578-17.478-32.015-17.478c-12.889,0-24.273,6.411-31.162,16.212 C191.765,403.825,195.883,414.727,197.586,426.192z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    d: \"M198.576,426.045c-6.018-40.51-40.935-71.591-83.119-71.591c-29.285,0-55.061,14.984-70.105,37.697 c23.034,38.687,56.425,70.475,96.344,91.571C145.965,454.156,169.144,430.721,198.576,426.045z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M123.849,364.787c21.432,0,41.078,7.602,56.425,20.237c-15.413-18.665-38.719-30.57-64.817-30.57 c-29.285,0-55.061,14.984-70.105,37.697c1.987,3.337,4.057,6.62,6.196,9.852C67.667,379.477,94.036,364.787,123.849,364.787z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    d: \"M396.543,354.454c-42.184,0-77.101,31.082-83.119,71.591c29.432,4.676,52.611,28.111,56.88,57.677 c39.918-21.096,73.31-52.885,96.344-91.571C451.604,369.438,425.828,354.454,396.543,354.454z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M401.627,354.61c-1.682-0.1-3.376-0.156-5.084-0.156c-42.184,0-77.101,31.082-83.119,71.591 c3.136,0.498,6.196,1.222,9.174,2.131C330.96,389.897,362.404,360.256,401.627,354.61z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#293D7C\"\n    },\n    d: \"M302.612,425.177c-18.016,0-34.395,6.976-46.612,18.359c-12.217-11.384-28.596-18.359-46.612-18.359 c-34.435,0-62.92,25.446-67.695,58.558C175.821,501.772,214.713,512,256,512s80.179-10.228,114.307-28.265 C365.532,450.623,337.047,425.177,302.612,425.177z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#1A2B63\"\n    },\n    d: \"M223.686,433.681c9.435,0,18.439,1.835,26.68,5.162c-11.423-8.569-25.6-13.666-40.979-13.666 c-34.435,0-62.92,25.446-67.695,58.558c4.023,2.126,8.114,4.14,12.265,6.044C160.964,457.704,189.508,433.681,223.686,433.681z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M278.528,334.179h-15.119l1.929,15.261c0.519,4.11,4.277,7.017,8.381,6.5 c4.109-0.52,7.02-4.272,6.5-8.381L278.528,334.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#AEC1ED\"\n    },\n    d: \"M233.472,334.179l-3.966,31.38c-0.519,4.109,2.391,7.862,6.501,8.381 c0.319,0.04,0.636,0.06,0.95,0.06c3.723-0.001,6.953-2.771,7.432-6.561l4.204-33.261h-15.121V334.179z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M179.108,195.717c0-8.155,0.306-16.288,0.878-24.362c-24.06,13.549-40.636,43.733-40.636,78.678 c0,18.456,4.589,36.057,13.27,50.9c0.815,1.394,2.29,2.191,3.822,2.191c0.56,0,1.127-0.106,1.672-0.329 c11.409-4.664,23.601-7.06,36.244-7.16C184.375,264.907,179.108,230.591,179.108,195.717z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M150.689,250.033c0-28.863,11.315-54.467,28.808-70.143c0.134-2.851,0.289-5.697,0.49-8.535 c-24.06,13.549-40.636,43.733-40.636,78.678c0,18.456,4.589,36.057,13.27,50.9c0.815,1.394,2.29,2.191,3.822,2.191 c0.56,0,1.127-0.106,1.672-0.329c1.88-0.769,3.79-1.453,5.711-2.098C155.233,285.903,150.689,268.392,150.689,250.033z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M332.013,171.355c0.572,8.075,0.878,16.208,0.878,24.362c0,34.873-5.267,69.189-15.251,99.918 c12.644,0.1,24.835,2.496,36.244,7.16c0.545,0.223,1.113,0.329,1.672,0.329c1.533,0,3.007-0.798,3.822-2.191 c8.682-14.843,13.27-32.444,13.27-50.9C372.649,215.088,356.073,184.904,332.013,171.355z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M217.708,307.125v23.054c0,2.75,2.25,5,5,5h66.583c2.75,0,5-2.25,5-5v-23.054H217.708z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M234.715,330.179v-23.054h-17.007v23.054c0,2.75,2.25,5,5,5h17.007 C236.965,335.179,234.715,332.929,234.715,330.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EEF6FF\"\n    },\n    d: \"M316.854,90.318H195.145c-11.154,32.153-17.037,68.343-17.037,105.399 c0,38.522,6.389,76.387,18.475,109.5c0.638,1.746,2.298,2.908,4.157,2.908h110.519c1.859,0,3.52-1.162,4.157-2.908 c12.086-33.113,18.475-70.978,18.475-109.5C333.892,158.661,328.009,122.472,316.854,90.318z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M210.756,305.217c-12.087-33.113-18.475-70.978-18.475-109.5c0-37.056,5.883-73.246,17.037-105.399 h-14.172c-11.154,32.153-17.037,68.343-17.037,105.399c0,38.522,6.389,76.387,18.475,109.5c0.638,1.746,2.298,2.908,4.157,2.908 h14.172C213.054,308.125,211.394,306.963,210.756,305.217z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EA2A3D\"\n    },\n    d: \"M227.179,90.318v16.594c0,2.75,2.25,5,5,5h47.642c2.75,0,5-2.25,5-5V90.318H227.179z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M238.517,106.912V90.318h-11.338v16.594c0,2.75,2.25,5,5,5h11.338 C240.767,111.912,238.517,109.662,238.517,106.912z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FE3745\"\n    },\n    d: \"M256,0c-0.987,0-1.973,0.329-2.785,0.986c-22.338,18.089-41.154,45.529-54.411,79.354 c-1.41,3.599-2.735,7.269-4.006,10.978h122.403c-1.271-3.709-2.596-7.379-4.006-10.978c-13.257-33.825-32.072-61.265-54.411-79.354 C257.973,0.329,256.987,0,256,0z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#B7092B\"\n    },\n    d: \"M263.086,4.628c-1.419-1.251-2.852-2.468-4.301-3.642C257.973,0.329,256.987,0,256,0 s-1.973,0.329-2.785,0.986c-22.338,18.089-41.154,45.529-54.411,79.354c-1.41,3.599-2.735,7.269-4.006,10.978h14.172 c1.271-3.709,2.596-7.379,4.006-10.978C225.374,48.709,242.632,22.667,263.086,4.628z\"\n  }), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#445EA0\"\n    },\n    cx: 256,\n    cy: 180.93,\n    r: 51.02\n  }), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#69CDFF\"\n    },\n    cx: 256,\n    cy: 180.93,\n    r: 32.731\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#52BBEF\"\n    },\n    d: \"M235.268,180.932c0,16.027,11.521,29.355,26.732,32.174c-1.946,0.36-3.949,0.558-6,0.558 c-18.078,0-32.731-14.655-32.731-32.732s14.654-32.731,32.731-32.731c2.05,0,4.054,0.198,6,0.558 C246.789,151.578,235.268,164.905,235.268,180.932z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFD00D\"\n    },\n    d: \"M110.136,178.737c-1.147,0-2.181-0.691-2.62-1.751c-5.583-13.479-9.699-17.594-23.178-23.177 c-1.06-0.439-1.75-1.473-1.75-2.62c0-1.147,0.691-2.181,1.75-2.62c13.48-5.585,17.595-9.701,23.178-23.179 c0.439-1.06,1.473-1.751,2.62-1.751s2.181,0.691,2.62,1.751c5.584,13.478,9.7,17.594,23.179,23.179 c1.06,0.439,1.751,1.473,1.751,2.62c0,1.147-0.691,2.182-1.751,2.62c-13.479,5.582-17.595,9.698-23.179,23.177 C112.317,178.046,111.283,178.737,110.136,178.737L110.136,178.737z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFAF10\"\n    },\n    d: \"M113.185,171.317c-5.583-13.479-9.699-17.594-23.178-23.177c-0.666-0.275-1.185-0.787-1.48-1.413 c-1.294,0.606-2.674,1.214-4.189,1.842c-1.06,0.439-1.75,1.473-1.75,2.62c0,1.147,0.691,2.182,1.75,2.62 c13.479,5.583,17.595,9.698,23.178,23.177c0.439,1.06,1.473,1.751,2.62,1.751s2.181-0.691,2.62-1.751 c0.627-1.515,1.236-2.895,1.841-4.188C113.972,172.503,113.461,171.983,113.185,171.317z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FFFFFF\"\n    },\n    d: \"M411.469,201.404c-1.008,0-1.917-0.607-2.303-1.539c-4.907-11.848-8.525-15.465-20.373-20.372 c-0.931-0.385-1.539-1.295-1.539-2.303c0-1.009,0.607-1.917,1.539-2.303c11.849-4.909,15.466-8.527,20.373-20.374 c0.386-0.932,1.295-1.539,2.303-1.539s1.917,0.607,2.303,1.539c4.908,11.848,8.526,15.465,20.375,20.374 c0.931,0.386,1.538,1.294,1.538,2.303c0,1.008-0.607,1.917-1.539,2.303c-11.848,4.907-15.466,8.524-20.374,20.372 C413.387,200.796,412.478,201.404,411.469,201.404L411.469,201.404z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#D9EAFC\"\n    },\n    d: \"M414.149,194.882c-4.908-11.848-8.525-15.465-20.374-20.373c-0.585-0.242-1.042-0.691-1.301-1.242 c-1.137,0.532-2.351,1.067-3.682,1.619c-0.931,0.386-1.539,1.294-1.539,2.303c0,1.008,0.607,1.917,1.539,2.303 c11.849,4.907,15.466,8.524,20.373,20.372c0.386,0.932,1.295,1.539,2.303,1.539s1.917-0.607,2.303-1.539 c0.551-1.331,1.086-2.545,1.619-3.682C414.841,195.924,414.392,195.467,414.149,194.882z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#FF9518\"\n    },\n    d: \"M385.469,96.071c-1.175,0-2.234-0.708-2.684-1.793c-5.718-13.806-9.933-18.021-23.739-23.738 c-1.085-0.449-1.792-1.509-1.792-2.683c0-1.176,0.708-2.234,1.792-2.684c13.807-5.72,18.022-9.935,23.739-23.739 c0.45-1.086,1.509-1.794,2.684-1.794s2.234,0.708,2.684,1.794c5.719,13.805,9.934,18.02,23.74,23.739 c1.085,0.45,1.792,1.508,1.792,2.684c0,1.174-0.708,2.234-1.793,2.683c-13.806,5.717-18.02,9.933-23.74,23.738 C387.703,95.363,386.644,96.071,385.469,96.071L385.469,96.071z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#EF8318\"\n    },\n    d: \"M388.592,88.472c-5.719-13.805-9.934-18.02-23.74-23.738c-0.682-0.282-1.213-0.806-1.516-1.447 c-1.324,0.621-2.739,1.244-4.291,1.886c-1.085,0.45-1.792,1.508-1.792,2.684c0,1.174,0.708,2.234,1.792,2.683 c13.806,5.718,18.022,9.933,23.739,23.738c0.45,1.085,1.509,1.793,2.684,1.793s2.234-0.708,2.684-1.793 c0.643-1.552,1.266-2.966,1.886-4.29C389.397,89.686,388.874,89.154,388.592,88.472z\"\n  }), _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15);\n};\n\nexport default __webpack_public_path__ + \"static/media/project.9bda81de.svg\";\nexport { SvgComponent as ReactComponent };","export default class FetchReddit {\n\n\tgetSubreddit(subreddit){\n\t\treturn fetch(`https://www.reddit.com/r/${subreddit}.json`)\n\t\t  .then(function(response) {\n\t\t    return response.json();\n\t\t  })\n\t\t  .then(function(myJson) {\n\t\t    return myJson.data.children;\n\t\t  })\n      .catch(err => {\n        let subs = JSON.parse(localStorage.getItem(\"subreddits\"));\n        subs.splice(subs.indexOf(subreddit), 1);\n        localStorage.setItem(\"subreddits\", JSON.stringify(subs));\n      });\n\t}\n\n\tgetData(subreddits){\n\t\tlet promise = subreddits.map(subreddit=>{\n\t\t\treturn this.getSubreddit(subreddit);\n\t\t});\t\n\n\t    return Promise.all(promise).then(data=>{\n\t    \t\treturn data;\n\t    })\n\t}\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Layer_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      \"enableBackground\": \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), React.createElement(\"circle\", {\n    style: {\n      \"fill\": \"#FFD15D\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#F9B54C\"\n    },\n    d: \"M338.727,498.331c73.699-25.152,132.249-82.978,158.406-156.207L268.248,112.7l-48.992,58.671 l-28.727,33.449l80.365,80.437l-32.132,112.964L338.727,498.331z\"\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#324A5E\"\n    },\n    d: \"M322.975,181.851l-53.441-67.722c-3.268-4.143-8.256-6.561-13.533-6.561s-10.264,2.417-13.533,6.561 l-53.441,67.722c-4.093,5.186-4.861,12.254-1.979,18.199c2.882,5.946,8.907,9.719,15.513,9.719h36.202v188.452h34.478V209.77 h36.202c6.606,0,12.631-3.774,15.513-9.719C327.84,194.105,327.068,187.037,322.975,181.851z\"\n  })), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#2B3B4E\"\n    },\n    d: \"M322.975,181.851l-53.441-67.722c-3.268-4.143-8.256-6.561-13.533-6.561 c-0.193,0-0.383,0.026-0.574,0.033v290.621h17.813V209.77h36.202c6.606,0,12.631-3.774,15.513-9.719 C327.839,194.105,327.068,187.037,322.975,181.851z\"\n  }), _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15);\n};\n\nexport default __webpack_public_path__ + \"static/media/upload.0c734210.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport {\n  Form, Input, Icon, Button, notification, message,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport SubReddit from './components/subReddit';\nimport SettingsTab from './components/settingsTab';\nimport defaultData from './data/data';\nimport { ReactComponent as RocketSVG } from './assets/icons/project.svg';\nimport FetchReddit from './services/fetchReddit';\nimport { ReactComponent as UploadIcon } from './assets/icons/upload.svg';\n\nlet id = 1;\n\nlibrary.add(faTimes);\n\nconst BodyWrapper = styled.div`\n  overflow: hidden;\n`;\nconst NavBar = styled.nav`\n  color: white;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; \n  background: #201f30;\n  border-bottom: 1px solid #36344e;\n  padding: 0.5rem 2rem;\n  position: fixed;\n  width: 100%;\n  z-index: 1;\n\n  @media (min-width: 900px) {\n    padding: 0.5rem 4rem;\n  }  \n`;\nconst Card = styled.div`\n  position: relative;\n  background: #f60261;\n  border-radius: 5px;\n  box-shadow: 0 1px 7px 1px rgba(0,0,0,.4);\n  margin-bottom: 3rem;\n  flex-basis: 45%;\n\n  @media (min-width: 500px) {\n    margin-bottom: 0;\n  }  \n`;\nconst CardHeader = styled.div`\n  background: #250448 none repeat scroll 0% 0%;\n  padding: 1.5rem 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px 0px rgba(0,0,0,.5);\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n\n  svg {\n    height: 50px; \n    position: absolute;\n    right: -49px;\n    transform: rotate(-111deg); \n    top: 11px;\n\n    @media (min-width: 500px) {\n      right: 36px;\n    }    \n  }\n`;\nconst SubredditSuggestionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 45%;\n`;\nconst SubredditSuggestions = styled.div`\n  flex-grow: 1;\n  flex-basis: 33%;\n  padding: 0.5rem 0;\n`;\nconst SubredditCategory = styled.p`\n  color: #f60261;\n  font-weight: bold;\n  margin: 0;\n`;\nconst SubredditList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;  \n`;\nconst SubredditItem = styled.li`\n  :hover {\n    color: #111;\n    cursor: pointer;\n  }\n`;\nconst SubredditSuggestHeader = styled.p`\n  display: block;\n  width: 100%;\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 2rem;\n`;\nconst SubredditListWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-self: flex-start;\n`;\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  margin: 0 auto;\n  box-shadow: 0 1px 2px 0 rgba(0,0,0,.1);\n  padding: 1rem;\n  background: white;\n  border-radius: 5px;\n  justify-content: space-between;\n  \n  @media (min-width: 900px) {\n    flex-direction: row;\n    padding: 4rem;\n    border: 27px solid #250448;\n      width: 1200px;\n  }  \n`;\n\nconst SubsWrapper = styled.div``;\n\nconst BottomWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  position: fixed;\n  bottom: 20px;\n  right 20px;\n}\n`;\n\nconst UploadIconStyle = styled(UploadIcon)`\n  height: 50px;\n  margin-bottom: 10px;\n  cursor: pointer;\n`;\n\nconst Main = styled.div`\n  padding: 2rem;\n\n  @media (min-width: 900px) {\n    padding: 4rem;\n  }  \n`;\n\nconst openNotificationWithIcon = (type, label, sub, description) => {\n  notification[type]({\n    message: `${label}`,\n    description: <div dangerouslySetInnerHTML={{ __html: `<p>${description}</p><a target=\"_blank\" href='https://reddit.com/r/${sub}'>Preview</a>` }} />,\n  });\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.addSubReddit = this.addSubReddit.bind(this);\n    this.updateSubReddit = this.updateSubReddit.bind(this);\n\n    this.state = {\n      subreddits: [],\n      invalidSubreddits: [],\n      subredditsData: [], // JSON data\n      showInitialSetup: true,\n      sidebarIsOpen: false,\n    };\n  }\n\n  componentDidMount = () => {\n    // if there is already saved data in local storage, bypass initial screen\n    // if local storage is empty or not items set then show initial screen\n    if (JSON.parse(localStorage.getItem('subreddits')) !== null) {\n      this.setState({ showInitialSetup: false }, () => this.getData());\n    }\n  }\n\n  async getData() {\n    const subs = JSON.parse(localStorage.getItem('subreddits'));\n    const fetch = new FetchReddit();\n    const data = await fetch.getData(subs);\n    this.setState({ subredditsData: this.validateSubs(data) });\n\n    if (this.state.invalidSubreddits.length) message.error('Some subreddits could not be loaded');\n  }\n\n  remove = (k) => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  }\n\n  add = () => {\n    const { form } = this.props;\n    id += 1;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(id);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  }\n\n  handleSubmit = (e) => {\n    const { form } = this.props;\n    const { subreddits } = this.state;\n    const { validateFields } = form;\n\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (!err) {\n        let { names } = values;\n        names = names.filter(name => name !== null || 'undefined');\n        localStorage.setItem('subreddits', JSON.stringify(names));\n        this.setState({\n          subreddits: names,\n          showInitialSetup: false,\n        }, () => {\n          this.getData(subreddits);\n        });\n      }\n    });\n  }\n\n  validateSubs = (subs) => {\n    const validSubs = subs.filter(sub => sub !== undefined);\n    this.setState({\n      invalidSubreddits: subs.filter(sub => sub === undefined),\n    });\n    return validSubs;\n  }\n\n  updateSubReddit = (updatedSubs, type) => {\n    const {\n      form: {\n        setFieldsValue,\n      },\n    } = this.props;\n\n    // if local storage is empty, show initial screen & reset state\n    if (type === 'delete' && updatedSubs.length === 0) {\n      localStorage.removeItem('subreddits');\n      setFieldsValue({\n        keys: [0],\n      });\n      this.setState({\n        showInitialSetup: true,\n        subreddits: [],\n      });\n      return;\n    }\n\n    // if local storage has data then update local storage and fetch data\n    localStorage.setItem('subreddits', JSON.stringify(updatedSubs));\n\n    this.setState({\n      showInitialSetup: false,\n    }, () => {\n      this.getData(JSON.parse(localStorage.getItem('subreddits')));\n    });\n  }\n\n  handleChange = (e) => {\n    const { index, value } = e.target.value;\n\n    this.setState((prevState) => {\n      const state = { ...prevState };\n\n      state.subreddits[index] = value;\n      return state;\n    });\n  }\n\n  displaySubs = () => {\n    const { subredditsData } = this.state;\n    return JSON.parse(localStorage.getItem('subreddits')).map((subreddit, key) => (\n      <SubReddit\n        key={subreddit}\n        id={subreddit}\n        data={subredditsData[key]}\n        data2={JSON.parse(localStorage.getItem('subreddits'))}\n      />\n    ));\n  }\n\n  renderList = list => (\n    <SubredditSuggestions key={`${list}-${Math.random()}`}>\n      <SubredditCategory>{list.category_name}</SubredditCategory>\n      <SubredditList>\n        {list.subreddit.map((sub, key) => (\n          <SubredditItem key={key} onClick={() => openNotificationWithIcon('info', sub.label, sub.sub, sub.description)}>{sub.sub}</SubredditItem>\n        ))}\n      </SubredditList>\n    </SubredditSuggestions>\n  );\n\n  generateColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render = () => {\n    const {\n      form: {\n        getFieldDecorator,\n        getFieldValue,\n      },\n    } = this.props;\n    const { form } = this.props;\n\n    const { showInitialSetup } = this.state;\n\n    getFieldDecorator('keys', { initialValue: [0] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map(k => (\n      <Form.Item\n        required={false}\n        key={k}\n      >\n        {getFieldDecorator(`names[${k}]`, {\n          validateTrigger: ['onChange', 'onBlur'],\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: 'Required',\n          }],\n        })(\n          <Input placeholder=\"e.g: showerthoughts\" style={{ width: '75%', marginRight: 8 }} />,\n        )}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n            style={{ fill: '#fdcb01' }}\n          />\n        ) : null}\n      </Form.Item>\n    ));\n\n    return (\n      <BodyWrapper id=\"top\">\n        <NavBar>\n          <p style={{ margin: 0 }}>reddit</p>\n          {!showInitialSetup ? (\n            <SettingsTab\n              subreddits={JSON.parse(localStorage.getItem('subreddits'))}\n              updateSubs={this.updateSubReddit}\n              form={form}\n            />\n          ) : ''\n          }\n        </NavBar>\n\n        {showInitialSetup ? (\n          <div className=\"animated fadeIn\">\n            <SectionWrapper style={{ position: 'relative' }}>\n              <Card>\n                <CardHeader>\n                  <p\n                    className=\"x\"\n                    style={{\n                      fontWeight: 'bold', color: 'white', fontSize: '1.5rem', marginBottom: 0,\n                    }}\n                  >\n                    Lets Get Started\n                  </p>\n                  <p style={{\n                    color: '#ccc', margin: 0, padding: 0, fontSize: 12,\n                  }}\n                  >\n                    Start adding some of your favourite subreddits\n                  </p>\n                </CardHeader>\n                <Form onSubmit={this.handleSubmit}>\n                  {formItems}\n                  <Form.Item style={{ display: 'inline-block', marginRight: '1rem' }}>\n                    <Button type=\"dashed\" onClick={this.add}>\n                      <Icon type=\"plus\" />\n                      Add Subreddit\n                    </Button>\n                  </Form.Item>\n                  <Form.Item style={{ display: 'inline-block' }}>\n                    <Button htmlType=\"submit\">Submit</Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n              <SubredditSuggestionsWrapper>\n                <SubredditSuggestHeader>\n                  New to\n                  <a href=\"https://reddit.com\">Reddit</a>\n                  ? Explore some of the popular subreddits\n                </SubredditSuggestHeader>\n                <SubredditListWrapper>\n                  {defaultData.map((list, index) => this.renderList(list, index))}\n                </SubredditListWrapper>\n              </SubredditSuggestionsWrapper>\n              <RocketSVG style={{\n                position: 'absolute', right: -100, bottom: -50, height: 200, width: 'auto',\n              }}\n              />\n            </SectionWrapper>\n          </div>\n        )\n          : (\n            <Main>\n              <SubsWrapper>\n                {this.displaySubs()}\n              </SubsWrapper>\n              <BottomWrapper>\n                <a href=\"#top\"><UploadIconStyle /></a>\n              </BottomWrapper>\n            </Main>\n          )\n        }\n      </BodyWrapper>\n    );\n  }\n}\n\nApp.propTypes = {\n  form: PropTypes.shape({\n    setFieldsValue: PropTypes.func,\n    getFieldValue: PropTypes.func,\n    getFieldDecorator: PropTypes.func,\n    validateFields: PropTypes.func,\n  }).isRequired,\n};\n\n/*\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n*/\n\nconst AppWrapper = Form.create({ name: 'app' })(App);\n\nexport default AppWrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}